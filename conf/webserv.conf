[localhost]
listen = [80, 443, 8080, 8443, 8888]
# 静的ファイルの提供元を指定
# root = "./html"
root = "."

# デフォルトで提供するファイル
index = "index.html"

# キャッシュの有効期限を設定
expires = 1h

# 通信時間の最適化のため
keepalive_timeout = 65

# 同時接続数の上限を設定
worker_connections = 1024

# アクセスログの設定
access_log = "/path/to/log/access.log"

# DoS攻撃対策のため、クライアントの最大リクエストボディサイズを制限
client_max_body_size = 10M

# ディレクトリリスニングを行う
# autoindex = on

# リダイレクトを行う（このときのステータスコードは301固定とする）
return = "/redirected"

# リクエストのタイムアウト設定
send_timeout = 60s
receive_timeout = 60s

# HTTPS通信の設定
ssl_certificate = "/path/to/ssl/certificate.crt"
ssl_certificate_key = "/path/to/ssl/private.key"
ssl_protocols = ["TLSv1.2", "TLSv1.3"]
ssl_ciphers = "HIGH:!aNULL:!MD5"

# エラーロギングの設定
[localhost.error_log."/path/to/log/error.log"]
level = warn

# ステータスコードに対してエラーページを明示
[localhost.error_page]
404 = "/404.html"
500 = "/500.html"

# Set-Cookieを指定するため
[localhost.add_header]
Set_Cookie = "your_cookie_here"

# 負荷分散を実装
[localhost.upstream.backend]
# 任意のupstreamブロック名
server = ["backend1.example.com", "backend2.example.com"]

[localhost.location."/"]
index = "index.html"
proxy_pass = "http://backend"
proxy_read_timeout = 60s
proxy_send_timeout = 60s

[localhost.location."/".proxy_set_header]
Upgrade = $http_upgrade
Connection = "upgrade"
Host = $host

# URIの不透明性を上げるための設定
[localhost.location."/alias/"]
alias = "/path/to/alias"

# URI毎に不正なメソッドを無効化
[localhost.location."/restricted/".limit_except.GET]
deny = all
[localhost.location."/restricted/".limit_except.POST]
deny = all
[localhost.location."/restricted/".limit_except.DELETE]
deny = all
